require(devtools)
install_github("cscheid/rgithub")
library(github)
library(stringr)
client.id <- "f1b6e1892daf5efbfc52"
client.secret <- "198d82812d55bcadb5e55c6361872cab219078c5"
ctx = interactive.login(client.id, client.secret)
get.myself(ctx)
get.all.repositories(ctx = get.github.context())
?get.all.repositories
get.all.repositories(ctx = get.github.context())
setwd("C:/Users/Accelyst/Desktop/SMM/Chapter 5/Data")
getwd()
topuser <- read.csv("TopUsers.csv")
uname <- as.character(topuser$Username)
compdata <- ""
for (i in 120:nrow(topuser))
{
# Paste your client ID and secret ket in the below code
data2 <- fromJSON(paste0("https://api.github.com/users/", str_trim(uname[i], side = "both"), "/repos?client_id=XXXXXXXXXXXXXXXXXXXXXXXx&client_secret=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"))
data2 <- data2[,-(4)]
#data2 <- unclass(compdata)
compdata <- rbind(compdata, data2)
print(i)
}
library(jsonlite)
library(stringr)
for (i in 120:nrow(topuser))
{
# Paste your client ID and secret ket in the below code
data2 <- fromJSON(paste0("https://api.github.com/users/", str_trim(uname[i], side = "both"), "/repos?client_id=XXXXXXXXXXXXXXXXXXXXXXXx&client_secret=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"))
data2 <- data2[,-(4)]
#data2 <- unclass(compdata)
compdata <- rbind(compdata, data2)
print(i)
}
?as.POSIXct
colnames(activeusers)
activeusers <- read.csv("ActiveUsers.csv")
colnames(activeusers)
ausersubset123 <- activeusers[,c("id", "name")]
head(ausersubset123)
activeusers <- read.csv("ActiveUsers.csv")
format.git.date <- function(datestring) {
date <- as.POSIXct(datestring, format = "%Y-%m-%dT%H:%M:%SZ", tz = "GMT")
}
activeusers$created_at <- format.git.date(activeusers$created_at)
activeusers$updated_at <- format.git.date(activeusers$updated_at)
activeusers$pushed_at <- format.git.date(activeusers$pushed_at)
head(activeusers)
ausersubset$private <- as.integer(ausersubset$private)
ausersubset$fork <- as.integer(ausersubset$fork)
ausersubset$has_issues <- as.integer(ausersubset$has_issues)
ausersubset$has_downloads <- as.integer(ausersubset$has_downloads)
ausersubset$has_wiki <- as.integer(ausersubset$has_wiki)
ausersubset <- activeusers[,c("id","name","full_name","private","description","fork","created_at","updated_at","pushed_at","homepage","size","stargazers_count","watchers_count","language","has_issues","has_downloads","has_wiki","has_pages","forks_count","open_issues_count","forks","open_issues","watchers")]
head(ausersubset)
# Replace True and False with 1 and 0
ausersubset$private <- as.integer(ausersubset$private)
ausersubset$fork <- as.integer(ausersubset$fork)
ausersubset$has_issues <- as.integer(ausersubset$has_issues)
ausersubset$has_downloads <- as.integer(ausersubset$has_downloads)
ausersubset$has_wiki <- as.integer(ausersubset$has_wiki)
ausersubset$has_pages <- as.integer(ausersubset$has_pages)
ausersubset$full_name <- sapply(strsplit(as.character(ausersubset$full_name), split='/', fixed=TRUE), function(x) (x[1]))
head(ausersubset$full_name)
ausersubset$has_web <- as.numeric(grepl(".", ausersubset$homepage))
head(ausersubset)
ausersubset$desclen <- nchar(as.character(ausersubset$description))
ausersubset$dayscreated <- as.integer(difftime(Sys.Date(),ausersubset$created_at , units = c("days")))
ausersubset$daysupdated <- as.integer(difftime(Sys.Date(),ausersubset$updated_at , units = c("days")))
ausersubset$dayspushed <- as.integer(difftime(Sys.Date(),ausersubset$pushed_at , units = c("days")))
library(ggplot2)
table(ausersubset$language)
q <- qplot(ausersubset$language,
geom="histogram",
binwidth = 1,
main = "Histogram for Language",
xlab = "Language",
fill=I("blue"),
col=I("red"))
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
q <- qplot(ausersubset[which(ausersubset$language > 0),],
geom="histogram",
binwidth = 1,
main = "Histogram for Language",
xlab = "Language",
fill=I("blue"),
col=I("red"))
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ausersubset[which(ausersubset$language > 0)
]
ausersubset[which(ausersubset$language > 0),]
ausersubset$language <- as.integer(ausersubset$language)
ausersubset[which(ausersubset$language > 0),]
q <- qplot(ausersubset[which(ausersubset$language > 0),],
geom="histogram",
binwidth = 1,
main = "Histogram for Language",
xlab = "Language",
fill=I("blue"),
col=I("red"))
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
q <- qplot(ausersubset[which(ausersubset$language > 0),], aes(X5employff, prop)
geom="histogram",
binwidth = 1,
main = "Histogram for Language",
xlab = "Language",
fill=I("blue"),
col=I("red"))
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
q <- qplot(ausersubset[which(ausersubset$language > 5),], aes(X5employff, prop)
geom="histogram",
binwidth = 1,
main = "Histogram for Language",
xlab = "Language",
fill=I("blue"),
col=I("red"))
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
setwd("C:/Users/Accelyst/Desktop/SMM/Chapter 5/Data")
activeusers <- read.csv("ActiveUsers.csv")
format.git.date <- function(datestring) {
date <- as.POSIXct(datestring, format = "%Y-%m-%dT%H:%M:%SZ", tz = "GMT")
}
activeusers$created_at <- format.git.date(activeusers$created_at)
activeusers$updated_at <- format.git.date(activeusers$updated_at)
activeusers$pushed_at <- format.git.date(activeusers$pushed_at)
head(activeusers)
colnames(activeusers)
ausersubset <- activeusers[,c("id","name","full_name","private","description","fork","created_at","updated_at","pushed_at","homepage","size","stargazers_count","watchers_count","language","has_issues","has_downloads","has_wiki","has_pages","forks_count","open_issues_count","forks","open_issues","watchers")]
head(ausersubset)
ausersubset$private <- as.integer(ausersubset$private)
ausersubset$fork <- as.integer(ausersubset$fork)
ausersubset$has_issues <- as.integer(ausersubset$has_issues)
ausersubset$has_downloads <- as.integer(ausersubset$has_downloads)
ausersubset$has_wiki <- as.integer(ausersubset$has_wiki)
ausersubset$has_pages <- as.integer(ausersubset$has_pages)
ausersubset$full_name <- sapply(strsplit(as.character(ausersubset$full_name), split='/', fixed=TRUE), function(x) (x[1]))
head(ausersubset$full_name)
ausersubset$has_web <- as.numeric(grepl(".", ausersubset$homepage))
head(ausersubset)
ausersubset$desclen <- nchar(as.character(ausersubset$description))
ausersubset$dayscreated <- as.integer(difftime(Sys.Date(),ausersubset$created_at , units = c("days")))
ausersubset$daysupdated <- as.integer(difftime(Sys.Date(),ausersubset$updated_at , units = c("days")))
ausersubset$dayspushed <- as.integer(difftime(Sys.Date(),ausersubset$pushed_at , units = c("days")))
library(ggplot2)
table(ausersubset$language)
order((ausersubset$language))
lang <- table(ausersubset$language)
order(lang)
lang
lang <- data.frame(lang)
lang
order(lang$Freq)
lang[order(lang$Freq),]
lang[order(-lang$Freq),]
library(data.table)
install.packages("data.table")
library(data.table)
trenddata <- ausersubset[c("updated_at", "id")]
trenddata$updated_at <- as.POSIXct(strptime(trenddata$updated_at, "%Y-%m-%d"))
tdata <- table(trenddata$updated_at)
tdata <- as.data.frame(tdata)
head(tdata, 50)
colnames(tdata) <- c("Date","Repositories")
tdata1 <- tail(tdata, 75)
q <- ggplot(data=tdata1, aes(x=Date, y=Repositories, group=1)) +
geom_line() +
geom_point()
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
q <- ggplot(data=tdata1, aes(x=Date, y=Repositories, group=7)) +
geom_line() +
geom_point()
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
q <- ggplot(data=tdata1, aes(x=Date, y=Repositories, group=1)) +
geom_line()
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
q + theme(axis.text.x = element_text(angle = 90, hjust = 7))
q <- ggplot(data=tdata1, aes(x=Date, y=Repositories, group=1)) +
geom_line() +
geom_point()
q + theme(axis.text.x = element_text(angle = 90, hjust = 7))
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
q <- ggplot(data=tdata1, aes(x=Date, y=Repositories, group=1)) +
geom_line() +
geom_point()
q + theme(axis.text.x = element_text(angle = 90))
?ggplot
head(tdata, 50)
class(tdata$Date)
tdata$Date <- as.date(tdata$Date)
tdata$Date <- as.Date(tdata$Date)
tdata1 <- tail(tdata, 75)
q <- ggplot(data=tdata1, aes(x=Date, y=Repositories, group=1)) +
geom_line() +
geom_point()
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave(file="line-chart.png", dpi=500)
mdata <- ausersubset[c("created_at", "watchers_count", "forks_count")]
mdata$created_at <- as.POSIXct(strptime(mdata$created_at, "%Y-%m-%d"))
mdata$watchers_count <- as.numeric(mdata$watchers_count)
mdata$forks_count <- as.numeric(mdata$forks_count)
#mdata$created_at <- as.factor(as.character(mdata$created_at))
library(data.table)
DT <- data.table(mdata)
m1 <- DT[, sum(forks_count ), by = created_at]
m2 <- DT[, sum(watchers_count ), by = created_at]
m1 <- as.data.frame(m1)
m2 <- as.data.frame(m2)
m <- merge(m1, m2, by = "created_at")
colnames(m) <- c("Date", "forks", "watchers")
mdata <- m
mdata1 <- tail(mdata, 300)
rownames(mdata1) <- mdata1$Date
mdata1 <- mdata1[,-1]
head(mdata1, 30)
r1 <- rollapplyr(mdata1, 30, function(x) cor(x[,1],x[,2]), by.column=FALSE)
r1 <- as.data.frame(r1)
library(zoo)
install.packages("zoo")
library(zoo)
r1 <- rollapplyr(mdata1, 30, function(x) cor(x[,1],x[,2]), by.column=FALSE)
r1 <- as.data.frame(r1)
r0 <- tail(mdata$Date, 271)
r0 <- as.data.frame(r0)
resultcor <- cbind(r0,r1)
colnames(resultcor) <- c("Date","Corr")
resultcor$Date <- as.Date(resultcor$Date)
resultcor <- tail(resultcor, 75)
q <- ggplot(data=resultcor, aes(x=Date, y=Corr, group=1)) +
geom_line() +
geom_point()
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave(file="roll-corr.png", dpi=500)
